{
  "name": "aviat/hummingbird-anime-client",
  "description": "A self-hosted anime/manga client for Kitsu.",
  "license": "MIT",
  "authors": [
	{
	  "name": "Timothy J. Warren",
	  "email": "tim@timshomepage.net",
	  "homepage": "https://timshomepage.net",
	  "role": "Developer"
	}
  ],
  "autoload": {
	"files": [
	  "src/Ion/functions.php",
	  "src/AnimeClient/constants.php",
	  "src/AnimeClient/AnimeClient.php"
	],
	"psr-4": {
	  "Aviat\\": "src/"
	}
  },
  "autoload-dev": {
	"psr-4": {
	  "Aviat\\AnimeClient\\Tests\\": "tests/AnimeClient",
	  "Aviat\\Ion\\Tests\\": "tests/Ion",
	  "CodeIgniter\\": "build/CodeIgniter/"
	}
  },
  "config": {
	"lock": false,
	"platform": {
	  "php": "8"
	}
  },
  "require": {
	"amphp/amp": "^2.5.0",
	"amphp/http-client": "^4.5.0",
	"aura/html": "^2.5.0",
	"aura/router": "^3.1.0",
	"aura/session": "^2.1.0",
	"aviat/banker": "^3.1.1",
	"aviat/query": "^3.0.0",
	"danielstjules/stringy": "^3.1.0",
	"ext-dom": "*",
	"ext-intl": "*",
	"ext-json": "*",
	"ext-gd": "*",
	"ext-pdo": "*",
	"laminas/laminas-diactoros": "^2.5.0",
	"laminas/laminas-httphandlerrunner": "^1.1.0",
	"maximebf/consolekit": "^1.0.3",
	"monolog/monolog": "^2.0.2",
	"php": ">= 8.0.0",
	"psr/container": "^1.0.0",
	"psr/http-message": "^1.0.1",
	"psr/log": "^1.1.3",
	"robmorgan/phinx": "^0.12.4",
	"symfony/polyfill-mbstring": "^1.0.0",
	"symfony/polyfill-util": "^1.0.0",
	"tracy/tracy": "^2.8.0",
	"yosymfony/toml": "^1.0.4"
  },
  "require-dev": {
	"pdepend/pdepend": "^2.",
	"phploc/phploc": "^7.0.0",
	"phpmd/phpmd": "^2.8.2",
	"phpstan/phpstan": "^0.12.19",
	"phpunit/phpunit": "^9.5.0",
	"roave/security-advisories": "dev-master",
	"sebastian/phpcpd": "^6.0.0",
	"spatie/phpunit-snapshot-assertions": "^4.1.0",
	"squizlabs/php_codesniffer": "^3.5.4"
  },
  "scripts": {
	"build": "vendor/bin/robo build",
	"build:css": "cd public && npm run build:css && cd ..",
	"build:js": "cd public && npm run build:js && cd ..",
	"clean": "vendor/bin/robo clean",
	"coverage": "phpdbg -qrr -- vendor/bin/phpunit -c build",
	"phpstan": "phpstan analyse -c phpstan.neon",
	"watch:css": "cd public && npm run watch:css",
	"watch:js": "cd public && npm run watch:js",
	"test": "vendor/bin/phpunit -c build --no-coverage",
	"test-update": "vendor/bin/phpunit -c build --no-coverage -d --update-snapshots"
  },
  "scripts-descriptions": {
	"build": "Generate the api docs",
	"build:css": "Generate browser css",
	"clean": "Remove documentation generation files and folders",
	"coverage": "Generate a test coverage report",
	"phpstan": "Run PHP Static analysis",
	"test": "Run the unit tests"
  }
}
